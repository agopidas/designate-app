{"version":3,"sources":["SearchData.tsx","PopoverWindow.tsx","Description.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["topCompanies","company_name","useStyles","makeStyles","theme","createStyles","typography","padding","spacing","SimplePopover","classes","React","useState","anchorEl","setAnchorEl","open","Boolean","id","undefined","Button","aria-describedby","variant","color","onClick","event","currentTarget","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","Typography","className","Copyright","align","Link","href","Date","getFullYear","icon","marginRight","heroContent","backgroundColor","palette","background","paper","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","flexGrow","footer","cards","Designate","Fragment","CssBaseline","AppBar","position","Toolbar","noWrap","Container","component","gutterBottom","paragraph","Grid","container","justify","item","style","width","Autocomplete","disableClearable","options","map","option","renderInput","params","TextField","label","maxWidth","key","xs","sm","md","Card","CardContent","src","App","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0f8614ef.chunk.js","sourcesContent":["export const topCompanies = [\n    { company_name: 'Accenture' },\n    { company_name: 'Capgemini' },\n    { company_name: 'Xion' },\n    { company_name: 'Delloite' },\n    { company_name: 'CitiusTech' },\n    { company_name: 'Some Company' },\n    { company_name: 'Some Company1' },\n    { company_name: 'Some Company2' },\n    { company_name: 'Some Company3' },\n    { company_name: 'Some Company4' },\n    { company_name: 'Some Company5' },\n    { company_name: 'Some Company6' },\n    { company_name: 'Some Company7' },\n    { company_name: 'Some Company8' },\n    { company_name: 'Some Company9' },\n    { company_name: 'Some Company10' },\n  ];","import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    typography: {\n      padding: theme.spacing(2),\n    },\n  }),\n);\n\nexport default function SimplePopover() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n  return (\n    <div>\n      <Button aria-describedby={id} variant=\"contained\" color=\"primary\" onClick={handleClick}>\n        Open Popover\n      </Button>\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n      >\n        <Typography className={classes.typography}>\n          <p>Company Name: Some Name</p> \n            <p>Designation: Senior Software Engineer</p> \n            <p>Exp: 10 years</p>\n            <p>Salary: 100000</p>\n            <p>Level: Senior</p>\n            <p>Role: Senior Management</p> </Typography>\n      </Popover>\n    </div>\n  );\n}","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport CameraIcon from '@material-ui/icons/PhotoCamera';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\nimport { TextField } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { topCompanies } from './SearchData';\nimport PopoverWindow from './PopoverWindow';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Yuva Junction\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(4, 0, 4),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(4),\n  },\n}));\n\nconst cards = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nexport default function Designate() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar position=\"relative\">\n        <Toolbar>\n          <CameraIcon className={classes.icon} />\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            Designate\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <main>\n        {/* Hero unit */}\n        <div className={classes.heroContent}>\n          <Container>\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n              Designate\n            </Typography>\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n            We are here to help you to find all the Designation's/ Level's in any Corporate/ Organization.\n            </Typography>\n            <div className={classes.heroButtons}>\n              <Grid container spacing={2} justify=\"center\">\n              <Grid item>\n                <div style={{ width: 300 }}/>\n                <Autocomplete\n                id=\"search-companies \"\n                disableClearable\n                options={topCompanies.map(option => option.company_name)}\n                renderInput={params => (                \n                <TextField {...params} id=\"outlined-basic\" label=\"Search Company\" variant=\"outlined\" />\n                )}\n              />\n              </Grid>\n                <Grid item>\n                  <Button variant=\"contained\" color=\"primary\">\n                    Search\n                  </Button>\n                </Grid>\n                <Grid item>\n                  <Button variant=\"outlined\" color=\"primary\">\n                    Add \n                  </Button>\n                </Grid>\n              </Grid>\n            </div>\n          </Container>\n        </div>s\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n        <PopoverWindow/>\n        <h2> Most Popular</h2>\n        <p> Click Below Logos to Find Designation in Most Popualar Organizations</p>\n          {/* End hero unit */}\n          <Grid container spacing={2}>\n            {cards.map((card) => (\n              <Grid item key={card} xs={2} sm={2} md={2}>\n                <Card className={classes.card}>\n                  <CardContent className={classes.cardContent}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    <img src=\"//logo.clearbit.com/spotify.com?size=80&greyscale=true\"/>\n                    </Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </Container>\n      </main>\n      {/* Footer */}\n      <footer className={classes.footer}>\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          Yuva Junction\n        </Typography>\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n          We are GENz\n        </Typography>\n        <Copyright />\n      </footer>\n      {/* End footer */}\n    </React.Fragment>\n  );\n}","import * as React from 'react';\nimport './App.css';\nimport Description from './Description';\n\nconst App: React.FC = () => {\n    return <Description/>;\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}